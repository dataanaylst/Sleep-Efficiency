# Load your dataset
Sleep_Efficiency <- read.csv("your_dataset.csv")
# Install and load necessary libraries
if (!requireNamespace("glmnet", quietly = TRUE)) {
install.packages("glmnet")
}
library(glmnet)
# Load your dataset
Sleep_Efficiency <- read.csv("Sleep_Efficiency.csv")
# Assuming you have selected relevant predictor variables and the response variable
# Replace "response_variable" with the actual response variable name
# Extract response variable and predictor variables
response_variable <- Sleep_Efficiency$SleepEfficiency
predictor_variables <- Sleep_Efficiency[, c("Gender", "CaffeineConsumption", "NumAwakenings", "ExerciseFrequency", "REMSleepPercentage")]
# Install and load necessary libraries
if (!requireNamespace("glmnet", quietly = TRUE)) {
install.packages("glmnet")
}
library(glmnet)
# Load your dataset
Sleep_Efficiency <- read.csv("Sleep_Efficiency.csv")
# Assuming "Sleep_efficiency" is the response variable
response_variable <- Sleep_Efficiency$Sleep_efficiency
# Extract predictor variables
predictor_variables <- Sleep_Efficiency[, c("Age", "Gender", "Bedtime", "Wakeup_time", "Sleep_duration", "REM_sleep_percentage", "Deep_sleep_percentage", "Light_sleep_percentage", "Awakenings", "Caffeine_consumption", "Alcohol_consumption", "Smoking_status", "Exercise_frequency")]
# Convert categorical variables to dummy variables if needed
predictor_variables <- model.matrix(~.-1+Gender+Smoking_status, data = predictor_variables)
# Fit lasso regression model
lasso_model <- cv.glmnet(predictor_variables, response_variable, alpha = 1)
# Print the cross-validated lasso model
print(lasso_model)
# Plot the cross-validated mean squared error as a function of lambda
plot(lasso_model)
# Identify the optimal lambda value
best_lambda <- lasso_model$lambda.min
cat("Optimal Lambda:", best_lambda, "\n")
# Get the coefficients of the selected variables
lasso_coefficients <- coef(lasso_model, s = best_lambda)
print(lasso_coefficients)
# Install and load necessary libraries
if (!requireNamespace("glmnet", quietly = TRUE)) {
install.packages("glmnet")
}
library(glmnet)
library(ggplot2)
# Load your dataset
Sleep_Efficiency <- read.csv("Sleep_Efficiency.csv")
# Research Question 1: Sleep patterns and efficiency between gender groups
# Assuming Sleep_duration, Awakenings, and REM_sleep_percentage as relevant sleep variables
# Plot sleep duration by gender
ggplot(Sleep_Efficiency, aes(x = Gender, y = Sleep_duration, fill = Gender)) +
geom_boxplot() +
labs(title = "Sleep Duration by Gender")
# Plot number of awakenings by gender
ggplot(Sleep_Efficiency, aes(x = Gender, y = Awakenings, fill = Gender)) +
geom_boxplot() +
labs(title = "Number of Awakenings by Gender")
# Plot REM sleep percentage by gender
ggplot(Sleep_Efficiency, aes(x = Gender, y = REM_sleep_percentage, fill = Gender)) +
geom_boxplot() +
labs(title = "REM Sleep Percentage by Gender")
# Research Question 2: Relationship between caffeine consumption and sleep variables
# Assuming Sleep_efficiency and Awakenings as relevant sleep variables
# Plot sleep efficiency by caffeine consumption
ggplot(Sleep_Efficiency, aes(x = Caffeine_consumption, y = Sleep_efficiency, fill = Caffeine_consumption)) +
geom_boxplot() +
labs(title = "Sleep Efficiency by Caffeine Consumption")
# Plot number of awakenings by caffeine consumption
ggplot(Sleep_Efficiency, aes(x = Caffeine_consumption, y = Awakenings, fill = Caffeine_consumption)) +
geom_boxplot() +
labs(title = "Number of Awakenings by Caffeine Consumption")
# Research Question 3: Association between exercise frequency and REM sleep percentage
# Assuming REM_sleep_percentage as the relevant sleep variable
# Plot REM sleep percentage by exercise frequency
ggplot(Sleep_Efficiency, aes(x = Exercise_frequency, y = REM_sleep_percentage, fill = Exercise_frequency)) +
geom_boxplot() +
labs(title = "REM Sleep Percentage by Exercise Frequency")
# Lasso Regression
# Assuming "Sleep_efficiency" is the response variable
response_variable <- Sleep_Efficiency$Sleep_efficiency
# Extract predictor variables
predictor_variables <- Sleep_Efficiency[, c("Age", "Gender", "Bedtime", "Wakeup_time", "Sleep_duration", "REM_sleep_percentage", "Deep_sleep_percentage", "Light_sleep_percentage", "Awakenings", "Caffeine_consumption", "Alcohol_consumption", "Smoking_status", "Exercise_frequency")]
# Convert categorical variables to dummy variables if needed
predictor_variables <- model.matrix(~.-1+Gender+Smoking_status, data = predictor_variables)
# Fit lasso regression model
lasso_model <- cv.glmnet(predictor_variables, response_variable, alpha = 1)
# Print the cross-validated lasso model
print(lasso_model)
# Plot the cross-validated mean squared error as a function of lambda
plot(lasso_model)
# Identify the optimal lambda value
best_lambda <- lasso_model$lambda.min
cat("Optimal Lambda:", best_lambda, "\n")
# Get the coefficients of the selected variables
lasso_coefficients <- coef(lasso_model, s = best_lambda)
print(lasso_coefficients)
# Assuming "Sleep_efficiency" is a binary response variable (0 or 1, for example)
# You may need to convert it to a binary variable depending on your specific research question
# Convert Sleep_efficiency to a binary response variable (e.g., 1 for good sleep efficiency, 0 for poor sleep efficiency)
Sleep_Efficiency$Sleep_efficiency_binary <- ifelse(Sleep_Efficiency$Sleep_efficiency >= threshold, 1, 0)
# Load necessary libraries
library(caret)
library(party)
# Assuming your data frame is named 'Sleep_Efficiency'
# Replace 'dependent_variable' with the actual name of your dependent variable
# Research Question 1: Sleep patterns and efficiency by gender
model_gender <- glm(dependent_variable ~ Gender + OtherVariables, data = Sleep_Efficiency, family = "binomial")
# Load necessary libraries
library(caret)
library(party)
library(pROC)
# Assuming your data frame is named 'Sleep_Efficiency'
# Research Question 1: Sleep patterns and efficiency by gender
model_gender <- glm(Sleep_efficiency ~ Gender + OtherVariables, data = Sleep_Efficiency, family = "binomial")
# Load necessary libraries
library(caret)
library(party)
library(pROC)
# Assuming your data frame is named 'Sleep_Efficiency'
# Research Question 1: Sleep patterns and efficiency by gender
model_gender <- glm(Sleep_efficiency ~ Gender + Age + Bedtime + Wakeup_time + Sleep_duration + REM_sleep_percentage + Deep_sleep_percentage + Light_sleep_percentage + Awakenings + Caffeine_consumption + Alcohol_consumption + Smoking_status + Exercise_frequency, data = Sleep_Efficiency, family = "binomial")
summary(model_gender)
# Research Question 2: Caffeine consumption and awakenings
model_caffeine <- glm(Sleep_efficiency ~ Caffeine_consumption + Awakenings + Age + Bedtime + Wakeup_time + Sleep_duration + REM_sleep_percentage + Deep_sleep_percentage + Light_sleep_percentage + Smoking_status + Exercise_frequency, data = Sleep_Efficiency, family = "binomial")
summary(model_caffeine)
# Research Question 3: Exercise frequency and REM sleep percentage
model_exercise <- glm(Sleep_efficiency ~ Exercise_frequency + Age + Bedtime + Wakeup_time + Sleep_duration + REM_sleep_percentage + Deep_sleep_percentage + Light_sleep_percentage + Awakenings + Caffeine_consumption + Alcohol_consumption + Smoking_status, data = Sleep_Efficiency, family = "binomial")
summary(model_exercise)
# Confusion matrix and ROC curve for each model
conf_matrix_gender <- confusionMatrix(predict(model_gender, type = "response") > 0.5, Sleep_Efficiency$Sleep_efficiency)
# Convert Sleep_efficiency to a binary factor variable
Sleep_Efficiency$Sleep_efficiency <- as.factor(ifelse(Sleep_Efficiency$Sleep_efficiency > threshold, "Good", "Poor"))
# Define the threshold for classifying sleep efficiency
threshold <- 0.5  # You can choose a different threshold based on your problem
# Convert Sleep_efficiency to a binary factor variable
Sleep_Efficiency$Sleep_efficiency <- as.factor(ifelse(Sleep_Efficiency$Sleep_efficiency > threshold, "Good", "Poor"))
# Research Question 1: Sleep patterns and efficiency by gender
model_gender <- glm(Sleep_efficiency ~ Gender + Age + Bedtime + Wakeup_time + Sleep_duration + REM_sleep_percentage + Deep_sleep_percentage + Light_sleep_percentage + Awakenings + Caffeine_consumption + Alcohol_consumption + Smoking_status + Exercise_frequency, data = Sleep_Efficiency, family = "binomial")
summary(model_gender)
# Research Question 2: Caffeine consumption and awakenings
model_caffeine <- glm(Sleep_efficiency ~ Caffeine_consumption + Awakenings + Age + Bedtime + Wakeup_time + Sleep_duration + REM_sleep_percentage + Deep_sleep_percentage + Light_sleep_percentage + Smoking_status + Exercise_frequency, data = Sleep_Efficiency, family = "binomial")
summary(model_caffeine)
# Research Question 3: Exercise frequency and REM sleep percentage
model_exercise <- glm(Sleep_efficiency ~ Exercise_frequency + Age + Bedtime + Wakeup_time + Sleep_duration + REM_sleep_percentage + Deep_sleep_percentage + Light_sleep_percentage + Awakenings + Caffeine_consumption + Alcohol_consumption + Smoking_status, data = Sleep_Efficiency, family = "binomial")
summary(model_exercise)
# Confusion matrix and ROC curve for each model
conf_matrix_gender <- confusionMatrix(predict(model_gender, type = "response") > threshold, Sleep_Efficiency$Sleep_efficiency)
# Define the threshold for classifying sleep efficiency
threshold <- 0.5  # You can choose a different threshold based on your problem
# Convert Sleep_efficiency to a binary factor variable
Sleep_Efficiency$Sleep_efficiency <- as.factor(ifelse(Sleep_Efficiency$Sleep_efficiency > threshold, "Good", "Poor"))
# Research Question 1: Sleep patterns and efficiency by gender
model_gender <- glm(Sleep_efficiency ~ Gender + Age + Bedtime + Wakeup_time + Sleep_duration + REM_sleep_percentage + Deep_sleep_percentage + Light_sleep_percentage + Awakenings + Caffeine_consumption + Alcohol_consumption + Smoking_status + Exercise_frequency, data = Sleep_Efficiency, family = "binomial")
# Install and load necessary libraries
if (!requireNamespace("tree", quietly = TRUE)) {
install.packages("tree")
}
library(tree)
library(ggplot2)
# Load your dataset
Sleep_Efficiency <- read.csv("Sleep_Efficiency.csv")
# Research Question 1: Sleep patterns and efficiency between gender groups
# Assuming Sleep_duration, Awakenings, and REM_sleep_percentage as relevant sleep variables
# Plot sleep duration by gender
ggplot(Sleep_Efficiency, aes(x = Gender, y = Sleep_duration, fill = Gender)) +
geom_boxplot() +
labs(title = "Sleep Duration by Gender")
# Plot number of awakenings by gender
ggplot(Sleep_Efficiency, aes(x = Gender, y = Awakenings, fill = Gender)) +
geom_boxplot() +
labs(title = "Number of Awakenings by Gender")
# Plot REM sleep percentage by gender
ggplot(Sleep_Efficiency, aes(x = Gender, y = REM_sleep_percentage, fill = Gender)) +
geom_boxplot() +
labs(title = "REM Sleep Percentage by Gender")
# Research Question 2: Relationship between caffeine consumption and sleep variables
# Assuming Sleep_efficiency and Awakenings as relevant sleep variables
# Plot sleep efficiency by caffeine consumption
ggplot(Sleep_Efficiency, aes(x = Caffeine_consumption, y = Sleep_efficiency, fill = Caffeine_consumption)) +
geom_boxplot() +
labs(title = "Sleep Efficiency by Caffeine Consumption")
# Plot number of awakenings by caffeine consumption
ggplot(Sleep_Efficiency, aes(x = Caffeine_consumption, y = Awakenings, fill = Caffeine_consumption)) +
geom_boxplot() +
labs(title = "Number of Awakenings by Caffeine Consumption")
# Research Question 3: Association between exercise frequency and REM sleep percentage
# Assuming REM_sleep_percentage as the relevant sleep variable
# Plot REM sleep percentage by exercise frequency
ggplot(Sleep_Efficiency, aes(x = Exercise_frequency, y = REM_sleep_percentage, fill = Exercise_frequency)) +
geom_boxplot() +
labs(title = "REM Sleep Percentage by Exercise Frequency")
# Regression Tree
# Assuming "Sleep_efficiency" is the response variable
response_variable <- Sleep_Efficiency$Sleep_efficiency
# Extract predictor variables
predictor_variables <- Sleep_Efficiency[, c("Age", "Gender", "Bedtime", "Wakeup_time", "Sleep_duration", "REM_sleep_percentage", "Deep_sleep_percentage", "Light_sleep_percentage", "Awakenings", "Caffeine_consumption", "Alcohol_consumption", "Smoking_status", "Exercise_frequency")]
# Install and load necessary libraries
if (!requireNamespace("tree", quietly = TRUE)) {
install.packages("tree")
}
library(tree)
library(ggplot2)
# Load your dataset
Sleep_Efficiency <- read.csv("Sleep_Efficiency.csv")
# Research Question 1: Sleep patterns and efficiency between gender groups
# Assuming Sleep_duration, Awakenings, and REM_sleep_percentage as relevant sleep variables
# Plot sleep duration by gender
ggplot(Sleep_Efficiency, aes(x = Gender, y = Sleep_duration, fill = Gender)) +
geom_boxplot() +
labs(title = "Sleep Duration by Gender")
# Plot number of awakenings by gender
ggplot(Sleep_Efficiency, aes(x = Gender, y = Awakenings, fill = Gender)) +
geom_boxplot() +
labs(title = "Number of Awakenings by Gender")
# Plot REM sleep percentage by gender
ggplot(Sleep_Efficiency, aes(x = Gender, y = REM_sleep_percentage, fill = Gender)) +
geom_boxplot() +
labs(title = "REM Sleep Percentage by Gender")
# Research Question 2: Relationship between caffeine consumption and sleep variables
# Assuming Sleep_efficiency and Awakenings as relevant sleep variables
# Plot sleep efficiency by caffeine consumption
ggplot(Sleep_Efficiency, aes(x = Caffeine_consumption, y = Sleep_efficiency, fill = Caffeine_consumption)) +
geom_boxplot() +
labs(title = "Sleep Efficiency by Caffeine Consumption")
# Plot number of awakenings by caffeine consumption
ggplot(Sleep_Efficiency, aes(x = Caffeine_consumption, y = Awakenings, fill = Caffeine_consumption)) +
geom_boxplot() +
labs(title = "Number of Awakenings by Caffeine Consumption")
# Research Question 3: Association between exercise frequency and REM sleep percentage
# Assuming REM_sleep_percentage as the relevant sleep variable
# Plot REM sleep percentage by exercise frequency
ggplot(Sleep_Efficiency, aes(x = Exercise_frequency, y = REM_sleep_percentage, fill = Exercise_frequency)) +
geom_boxplot() +
labs(title = "REM Sleep Percentage by Exercise Frequency")
# Regression Tree
# Assuming "Sleep_efficiency" is the response variable
response_variable <- Sleep_Efficiency$Sleep_efficiency
# Extract predictor variables
predictor_variables <- Sleep_Efficiency[, c("Age", "Gender", "Sleep_duration", "REM_sleep_percentage", "Deep_sleep_percentage", "Light_sleep_percentage", "Awakenings", "Caffeine_consumption", "Alcohol_consumption", "Smoking_status", "Exercise_frequency")]
# Convert categorical variables to dummy variables if needed
predictor_variables <- model.matrix(~.-1+Gender+Smoking_status, data = predictor_variables)
# Fit regression tree model
tree_model <- tree(response_variable ~ ., data = predictor_variables)
# Regression Tree
# Assuming "Sleep_efficiency" is the response variable
response_variable <- Sleep_Efficiency$Sleep_efficiency
# Extract predictor variables
predictor_variables <- Sleep_Efficiency[, c("Age", "Gender", "Bedtime", "Wakeup_time", "Sleep_duration", "REM_sleep_percentage", "Deep_sleep_percentage", "Light_sleep_percentage", "Awakenings", "Caffeine_consumption", "Alcohol_consumption", "Smoking_status", "Exercise_frequency")]
# Regression Tree
# Assuming "Sleep_efficiency" is the response variable
response_variable <- Sleep_Efficiency$Sleep_efficiency
# Extract predictor variables
predictor_variables <- Sleep_Efficiency[, c("Age", "Gender", "Sleep_duration", "REM_sleep_percentage", "Deep_sleep_percentage", "Light_sleep_percentage", "Awakenings", "Caffeine_consumption", "Alcohol_consumption", "Smoking_status", "Exercise_frequency")]
# Convert categorical variables to dummy variables if needed
predictor_variables <- model.matrix(~.-1+Gender+Smoking_status, data = predictor_variables)
# Combine response and predictor variables into a data frame
data_frame <- as.data.frame(cbind(response_variable, predictor_variables))
# Fit regression tree model
tree_model <- tree(response_variable ~ ., data = data_frame)
# Plot the regression tree
plot(tree_model)
text(tree_model)
# Make predictions using the regression tree
tree_predictions <- predict(tree_model, newdata = data_frame)
# Display the first few predicted values
head(tree_predictions)
# Regression Tree Analysis
# Load necessary libraries
if (!requireNamespace("tree", quietly = TRUE)) {
install.packages("tree")
}
library(tree)
# Load your dataset
Sleep_Efficiency <- read.csv("Sleep_Efficiency.csv")
# 1. Sleep patterns and efficiency between gender groups
# Assuming Sleep_duration, Awakenings, and REM_sleep_percentage as relevant sleep variables
# Create a data frame with relevant variables
gender_analysis_data <- Sleep_Efficiency[, c("Gender", "Sleep_duration", "Awakenings", "REM_sleep_percentage")]
# Convert categorical variables to dummy variables if needed
gender_analysis_data <- model.matrix(~.-1+Gender, data = gender_analysis_data)
# Fit regression tree model for gender analysis
gender_tree_model <- tree(Sleep_duration + Awakenings + REM_sleep_percentage ~ ., data = gender_analysis_data)
# Regression Tree Analysis
# Load necessary libraries
if (!requireNamespace("tree", quietly = TRUE)) {
install.packages("tree")
}
library(tree)
# Load your dataset
Sleep_Efficiency <- read.csv("Sleep_Efficiency.csv")
# 1. Sleep patterns and efficiency between gender groups
# Assuming Sleep_duration, Awakenings, and REM_sleep_percentage as relevant sleep variables
# Create a data frame with relevant variables
gender_analysis_data <- Sleep_Efficiency[, c("Gender", "Sleep_duration", "Awakenings", "REM_sleep_percentage")]
# Convert categorical variables to dummy variables if needed
gender_analysis_data <- model.matrix(~.-1+Gender, data = gender_analysis_data)
# Combine response and predictor variables into a data frame
gender_data_frame <- as.data.frame(gender_analysis_data)
# Fit regression tree model for gender analysis
gender_tree_model <- tree(Sleep_duration + Awakenings + REM_sleep_percentage ~ ., data = gender_data_frame)
# Plot the regression tree for gender analysis
plot(gender_tree_model)
text(gender_tree_model)
# 2. Relationship between caffeine consumption and sleep variables
# Assuming Sleep_efficiency and Awakenings as relevant sleep variables
# Create a data frame with relevant variables
caffeine_analysis_data <- Sleep_Efficiency[, c("Caffeine_consumption", "Sleep_efficiency", "Awakenings")]
# Convert categorical variables to dummy variables if needed
caffeine_analysis_data <- model.matrix(~.-1+Caffeine_consumption, data = caffeine_analysis_data)
# Combine response and predictor variables into a data frame
caffeine_data_frame <- as.data.frame(caffeine_analysis_data)
# Fit regression tree model for caffeine analysis
caffeine_tree_model <- tree(Sleep_efficiency + Awakenings ~ ., data = caffeine_data_frame)
# Plot the regression tree for caffeine analysis
plot(caffeine_tree_model)
# Regression Tree Analysis
# Load necessary libraries
if (!requireNamespace("tree", quietly = TRUE)) {
install.packages("tree")
}
library(tree)
# Load your dataset
Sleep_Efficiency <- read.csv("Sleep_Efficiency.csv")
# 1. Sleep patterns and efficiency between gender groups
# Assuming Sleep_duration, Awakenings, and REM_sleep_percentage as relevant sleep variables
# Create a data frame with relevant variables
gender_analysis_data <- Sleep_Efficiency[, c("Gender", "Sleep_duration", "Awakenings", "REM_sleep_percentage")]
# Convert categorical variables to dummy variables if needed
gender_analysis_data <- model.matrix(~.-1+Gender, data = gender_analysis_data)
# Combine response and predictor variables into a data frame
gender_data_frame <- as.data.frame(gender_analysis_data)
# Fit regression tree model for gender analysis
gender_tree_model <- tree(Sleep_duration + Awakenings + REM_sleep_percentage ~ ., data = gender_data_frame, mincut = 5)  # mincut is the minimum number of observations in a node
# Plot the regression tree for gender analysis
plot(gender_tree_model)
text(gender_tree_model)
# 2. Relationship between caffeine consumption and sleep variables
# Assuming Sleep_efficiency and Awakenings as relevant sleep variables
# Create a data frame with relevant variables
caffeine_analysis_data <- Sleep_Efficiency[, c("Caffeine_consumption", "Sleep_efficiency", "Awakenings")]
# Convert categorical variables to dummy variables if needed
caffeine_analysis_data <- model.matrix(~.-1+Caffeine_consumption, data = caffeine_analysis_data)
# Combine response and predictor variables into a data frame
caffeine_data_frame <- as.data.frame(caffeine_analysis_data)
# Fit regression tree model for caffeine analysis
caffeine_tree_model <- tree(Sleep_efficiency + Awakenings ~ ., data = caffeine_data_frame, mincut = 5)
# Plot the regression tree for caffeine analysis
plot(caffeine_tree_model)
# Regression Tree Analysis
# Load necessary libraries
if (!requireNamespace("tree", quietly = TRUE)) {
install.packages("tree")
}
library(tree)
# Load your dataset
Sleep_Efficiency <- read.csv("Sleep_Efficiency.csv")
# 1. Sleep patterns and efficiency between gender groups
# Assuming Sleep_duration, Awakenings, and REM_sleep_percentage as relevant sleep variables
# Create a data frame with relevant variables
gender_analysis_data <- Sleep_Efficiency[, c("Gender", "Sleep_duration", "Awakenings", "REM_sleep_percentage")]
# Convert categorical variables to dummy variables if needed
gender_analysis_data <- model.matrix(~.-1+Gender, data = gender_analysis_data)
# Combine response and predictor variables into a data frame
gender_data_frame <- as.data.frame(gender_analysis_data)
# Fit regression tree model for gender analysis
gender_tree_model <- tree(Sleep_duration + Awakenings + REM_sleep_percentage ~ ., data = gender_data_frame, mincut = 5)  # mincut is the minimum number of observations in a node
# Plot the regression tree for gender analysis
plot(gender_tree_model)
text(gender_tree_model)
# 2. Relationship between caffeine consumption and sleep variables
# Assuming Sleep_efficiency and Awakenings as relevant sleep variables
# Create a data frame with relevant variables
caffeine_analysis_data <- Sleep_Efficiency[, c("Caffeine_consumption", "Sleep_efficiency", "Awakenings")]
# Convert categorical variables to dummy variables if needed
caffeine_analysis_data <- model.matrix(~.-1+Caffeine_consumption, data = caffeine_analysis_data)
# Combine response and predictor variables into a data frame
caffeine_data_frame <- as.data.frame(caffeine_analysis_data)
# Fit regression tree model for caffeine analysis
caffeine_tree_model <- tree(Sleep_efficiency + Awakenings ~ ., data = caffeine_data_frame, mincut = 5)
# Plot the regression tree for caffeine analysis
plot(caffeine_tree_model)
library(rpart)
library(rpart.plot)
# Regression Tree Analysis with rpart
# Load necessary libraries
if (!requireNamespace("rpart", quietly = TRUE)) {
install.packages("rpart")
}
library(rpart)
library(rpart.plot)
# Load your dataset
Sleep_Efficiency <- read.csv("Sleep_Efficiency.csv")
# 1. Sleep patterns and efficiency between gender groups
# Assuming Sleep_duration, Awakenings, and REM_sleep_percentage as relevant sleep variables
# Create a data frame with relevant variables
gender_analysis_data <- Sleep_Efficiency[, c("Gender", "Sleep_duration", "Awakenings", "REM_sleep_percentage")]
# Convert categorical variables to dummy variables if needed
gender_analysis_data <- model.matrix(~.-1+Gender, data = gender_analysis_data)
# Combine response and predictor variables into a data frame
gender_data_frame <- as.data.frame(gender_analysis_data)
# Fit regression tree model for gender analysis
gender_tree_model <- rpart(Sleep_duration + Awakenings + REM_sleep_percentage ~ ., data = gender_data_frame)
# Plot the regression tree for gender analysis
rpart.plot(gender_tree_model)
# 2. Relationship between caffeine consumption and sleep variables
# Assuming Sleep_efficiency and Awakenings as relevant sleep variables
# Create a data frame with relevant variables
caffeine_analysis_data <- Sleep_Efficiency[, c("Caffeine_consumption", "Sleep_efficiency", "Awakenings")]
# Convert categorical variables to dummy variables if needed
caffeine_analysis_data <- model.matrix(~.-1+Caffeine_consumption, data = caffeine_analysis_data)
# Combine response and predictor variables into a data frame
caffeine_data_frame <- as.data.frame(caffeine_analysis_data)
# Fit regression tree model for caffeine analysis
caffeine_tree_model <- rpart(Sleep_efficiency + Awakenings ~ ., data = caffeine_data_frame)
# Plot the regression tree for caffeine analysis
rpart.plot(caffeine_tree_model)
# 3. Association between exercise frequency and REM sleep percentage
# Assuming REM_sleep_percentage as the relevant sleep variable
# Create a data frame with relevant variables
exercise_analysis_data <- Sleep_Efficiency[, c("Exercise_frequency", "REM_sleep_percentage")]
# Convert categorical variables to dummy variables if needed
exercise_analysis_data <- model.matrix(~.-1+Exercise_frequency, data = exercise_analysis_data)
# Combine response and predictor variables into a data frame
exercise_data_frame <- as.data.frame(exercise_analysis_data)
# Fit regression tree model for exercise analysis
exercise_tree_model <- rpart(REM_sleep_percentage ~ ., data = exercise_data_frame)
# Plot the regression tree for exercise analysis
rpart.plot(exercise_tree_model)
# Regression Tree Analysis
# Load necessary libraries
if (!requireNamespace("tree", quietly = TRUE)) {
install.packages("tree")
}
if (!requireNamespace("rpart.plot", quietly = TRUE)) {
install.packages("rpart.plot")
}
library(tree)
library(rpart.plot)
# Load your dataset
Sleep_Efficiency <- read.csv("Sleep_Efficiency.csv")
# 1. Sleep patterns and efficiency between gender groups
# Assuming Sleep_duration, Awakenings, and REM_sleep_percentage as relevant sleep variables
# Create a data frame with relevant variables
gender_analysis_data <- Sleep_Efficiency[, c("Gender", "Sleep_duration", "Awakenings", "REM_sleep_percentage")]
# Convert categorical variables to dummy variables if needed
gender_analysis_data <- model.matrix(~.-1+Gender, data = gender_analysis_data)
# Combine response and predictor variables into a data frame
gender_data_frame <- as.data.frame(gender_analysis_data)
# Fit regression tree model for gender analysis
gender_tree_model <- tree(Sleep_duration + Awakenings + REM_sleep_percentage ~ ., data = gender_data_frame)
# Plot the regression tree for gender analysis using rpart.plot
prp(gender_tree_model)
# Regression Tree Analysis with rpart
# Load necessary libraries
if (!requireNamespace("rpart", quietly = TRUE)) {
install.packages("rpart")
}
library(rpart)
library(rpart.plot)
# Load your dataset
Sleep_Efficiency <- read.csv("Sleep_Efficiency.csv")
# 1. Sleep patterns and efficiency between gender groups
# Assuming Sleep_duration, Awakenings, and REM_sleep_percentage as relevant sleep variables
# Create a data frame with relevant variables
gender_analysis_data <- Sleep_Efficiency[, c("Gender", "Sleep_duration", "Awakenings", "REM_sleep_percentage")]
# Convert categorical variables to dummy variables if needed
gender_analysis_data <- model.matrix(~.-1+Gender, data = gender_analysis_data)
# Combine response and predictor variables into a data frame
gender_data_frame <- as.data.frame(gender_analysis_data)
# Fit regression tree model for gender analysis
gender_tree_model <- rpart(Sleep_duration + Awakenings + REM_sleep_percentage ~ ., data = gender_data_frame)
# Plot the regression tree for gender analysis
rpart.plot(gender_tree_model, box.palette="GnBu", shadow.col="gray", nn=TRUE)
# 2. Relationship between caffeine consumption and sleep variables
# Assuming Sleep_efficiency and Awakenings as relevant sleep variables
# Create a data frame with relevant variables
caffeine_analysis_data <- Sleep_Efficiency[, c("Caffeine_consumption", "Sleep_efficiency", "Awakenings")]
# Convert categorical variables to dummy variables if needed
caffeine_analysis_data <- model.matrix(~.-1+Caffeine_consumption, data = caffeine_analysis_data)
# Combine response and predictor variables into a data frame
caffeine_data_frame <- as.data.frame(caffeine_analysis_data)
# Fit regression tree model for caffeine analysis
caffeine_tree_model <- rpart(Sleep_efficiency + Awakenings ~ ., data = caffeine_data_frame)
# Plot the regression tree for caffeine analysis
rpart.plot(caffeine_tree_model, box.palette="GnBu", shadow.col="gray", nn=TRUE)
# 3. Association between exercise frequency and REM sleep percentage
# Assuming REM_sleep_percentage as the relevant sleep variable
# Create a data frame with relevant variables
exercise_analysis_data <- Sleep_Efficiency[, c("Exercise_frequency", "REM_sleep_percentage")]
# Convert categorical variables to dummy variables if needed
exercise_analysis_data <- model.matrix(~.-1+Exercise_frequency, data = exercise_analysis_data)
# Combine response and predictor variables into a data frame
exercise_data_frame <- as.data.frame(exercise_analysis_data)
# Fit regression tree model for exercise analysis
exercise_tree_model <- rpart(REM_sleep_percentage ~ ., data = exercise_data_frame)
# Plot the regression tree for exercise analysis
rpart.plot(exercise_tree_model, box.palette="GnBu", shadow.col="gray", nn=TRUE)
# Convert categorical variables to dummy variables if needed
gender_analysis_data <- model.matrix(~.-1+Gender, data = gender_analysis_data)
# Combine response and predictor variables into a data frame
gender_data_frame <- as.data.frame(gender_analysis_data)
# Fit regression tree model for gender analysis
gender_tree_model <- rpart(Sleep_duration + Awakenings + REM_sleep_percentage ~ .,
data = gender_data_frame)
# Plot the regression tree for gender analysis
rpart.plot(gender_tree_model, box.palette="GnBu", shadow.col="gray", nn=TRUE)
# Create a data frame with relevant variables
caffeine_analysis_data <- Sleep_Efficiency[, c("Caffeine_consumption",
"Sleep_efficiency", "Awakenings")]
# Convert categorical variables to dummy variables if needed
caffeine_analysis_data <- model.matrix(~.-1+Caffeine_consumption,
data = caffeine_analysis_data)
